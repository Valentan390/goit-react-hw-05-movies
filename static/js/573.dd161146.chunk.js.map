{"version":3,"file":"static/js/573.dd161146.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/loader/Loader.module.css?198e","components/loader/Loader.jsx","webpack://react-homework-template/./src/components/moviesSearchBar/MoviesSearchBar.module.css?0b52","components/moviesSearchBar/MoviesSearchBar.jsx","components/moviesPage/MoviesPage.jsx","components/services/APIservices.js","components/trendingMovies/TrendingMoviesList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Spinner\":\"Loader_Spinner__XW-iJ\"};","import React from 'react';\nimport styles from './Loader.module.css';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className={styles.Spinner}>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#000000\"\n        ariaLabel=\"three-dots-loading\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"MoviesSearchBar_searchForm__xP8uT\",\"searchInput\":\"MoviesSearchBar_searchInput__e9vWC\",\"searchButton\":\"MoviesSearchBar_searchButton__guL-k\"};","import { useState } from 'react';\nimport styles from './MoviesSearchBar.module.css';\n\nconst MoviesSearchBar = ({ onSearch }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQuerySearch = event => {\n    setSearchQuery(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Enter the film title');\n    }\n\n    onSearch(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={styles.searchForm}>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search ...\"\n          onChange={handleQuerySearch}\n          className={styles.searchInput}\n        />\n        <button type=\"submit\" className={styles.searchButton}>\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default MoviesSearchBar;\n","import Loader from 'components/loader/Loader';\nimport MoviesSearchBar from 'components/moviesSearchBar/MoviesSearchBar';\nimport { fetchByQuery } from 'components/services/APIservices';\nimport TrendingMoviesList from 'components/trendingMovies/TrendingMoviesList';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n    const fetchMovie = async () => {\n      setLoading(true);\n\n      try {\n        const { data } = await fetchByQuery(searchRequest);\n\n        if (data.results.length < 1) {\n          Notiflix.Notify.failure(\n            'Sorry, nothing was found for your request. Please try again.'\n          );\n\n          setLoading(false);\n          setMovies([]);\n          return;\n        }\n        setMovies(data.results);\n        setLoading(false);\n      } catch (error) {\n        Notiflix.Notify.failure('Sorry something went wrong.');\n      }\n    };\n\n    fetchMovie();\n  }, [searchRequest]);\n\n  function onSubmit(value) {\n    setSearchParams({ query: value });\n  }\n\n  return (\n    <div>\n      <MoviesSearchBar onSearch={onSubmit} />\n      {loading && <Loader />}\n      {movies && <TrendingMoviesList movies={movies} prevLocation={location} />}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a268e0238f941e7dca8400715164ec05';\n\nconst END_POINTS = {\n  trending: '/trending/all/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const result = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return result;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const result = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return result;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const result = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return result;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const result = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return result;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const result = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return result;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst TrendingMoviesList = ({ movies, prevLocation }) => {\n  return (\n    <div style={{ paddingLeft: '15%' }}>\n      <ul>\n        {movies.map(({ id, original_title, original_name }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n                <h3>{original_title || original_name}</h3>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default TrendingMoviesList;\n"],"names":["className","styles","height","width","radius","color","ariaLabel","visible","onSearch","useState","searchQuery","setSearchQuery","onSubmit","event","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","movies","setMovies","loading","setLoading","location","useLocation","searchRequest","get","useEffect","fetchMovie","fetchByQuery","data","results","length","Notiflix","query","Loader","TrendingMoviesList","prevLocation","axios","API_KEY","END_POINTS","getMovies","page","result","fetchMoviesDetails","id","fetchMoviesCredits","fetchMoviesReviews","style","paddingLeft","map","original_title","original_name","to","state","from"],"sourceRoot":""}