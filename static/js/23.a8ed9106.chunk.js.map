{"version":3,"file":"static/js/23.a8ed9106.chunk.js","mappings":"yOAgDA,UA3CgB,WACd,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA8BE,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEMC,EAAAA,EAAAA,IAAmBT,GAFzB,sBAETU,EAFS,EAETA,MAECC,QAAQC,OAAS,GAJT,uBAKfR,GAAW,GALI,0BAUjBE,EAAWI,EAAKC,SAVC,kDAYjBE,IAAAA,OAAAA,QAAwB,+BAZP,0DAAH,qDAgBlBL,GACD,GAAE,CAACR,KAGF,2BACGG,IAAW,wBAAI,8CAChB,wBACGE,EAAQS,KAAI,SAAAC,GACX,OACE,2BACE,yBAAG,WAASA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAIR,C,+LC5CDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEVC,EACM,oBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACFJ,EAAAA,EAAAA,IAAA,UAChBE,EADgB,oBACeD,EADf,iBAC+BG,EAD/B,wCADE,cACjBC,EADiB,yBAKhBA,GALgB,2CAAH,qDAQTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcH,EAAd,+BAAqB,EAArB,SACLJ,EAAAA,EAAAA,IAAA,UAChBE,EADgB,oBACkBD,EADlB,iBACkCG,EADlC,kBACgDG,EADhD,wCADK,cACpBF,EADoB,yBAKnBA,GALmB,2CAAH,sDAQZG,EAAkB,mCAAG,WAAMT,GAAN,uFACXC,EAAAA,EAAAA,IAAA,UAChBE,EADgB,YACWH,EADX,oBACyBE,EADzB,oBADW,cAC1BI,EAD0B,yBAKzBA,GALyB,2CAAH,sDAQlBI,EAAkB,mCAAG,WAAMV,GAAN,uFACXC,EAAAA,EAAAA,IAAA,iBACTD,GADS,OACJG,EADI,oBAC+BD,EAD/B,oBADW,cAC1BI,EAD0B,yBAKzBA,GALyB,2CAAH,sDAQlBf,EAAkB,mCAAG,WAAOS,GAAP,4FAAWK,EAAX,+BAAkB,EAAlB,SACXJ,EAAAA,EAAAA,IAAA,iBACTD,GADS,OACJG,EADI,oBAC+BD,EAD/B,gCAC8DG,IAFnD,cAC1BC,EAD0B,yBAKzBA,GALyB,2CAAH,qD","sources":["components/reviews/Reviews.jsx","components/services/APIservices.js"],"sourcesContent":["import { fetchMoviesReviews } from 'components/services/APIservices';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\nconst Reviews = () => {\n  const { moviesid } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { data } = await fetchMoviesReviews(moviesid);\n\n        if (data.results.length < 1) {\n          setLoading(true);\n\n          return;\n        }\n\n        setReviews(data.results);\n      } catch (error) {\n        Notiflix.Notify.failure('Sorry something went wrong.');\n      }\n    };\n\n    fetchReviews();\n  }, [moviesid]);\n\n  return (\n    <div>\n      {loading && <h3>We don't have any reviews for this movie</h3>}\n      <ul>\n        {reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a268e0238f941e7dca8400715164ec05';\n\nconst END_POINTS = {\n  trending: '/trending/all/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const result = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return result;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const result = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return result;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const result = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return result;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const result = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return result;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const result = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return result;\n};\n"],"names":["moviesid","useParams","useState","loading","setLoading","reviews","setReviews","useEffect","fetchReviews","fetchMoviesReviews","data","results","length","Notiflix","map","review","author","content","id","axios","API_KEY","END_POINTS","getMovies","page","result","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits"],"sourceRoot":""}