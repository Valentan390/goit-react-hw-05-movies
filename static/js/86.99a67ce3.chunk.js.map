{"version":3,"file":"static/js/86.99a67ce3.chunk.js","mappings":"+QACA,EAA+B,gC,SC4C/B,EArCkB,WAChB,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,6FACjBF,GAAW,GADM,mBAGQG,EAAAA,EAAAA,MAHR,iBAGPC,EAHO,EAGPA,MAECC,UAAY,IACnBC,IAAAA,OAAAA,QACE,gEAGFN,GAAW,IAGbA,GAAW,GACXF,EAAUM,EAAKG,SAdA,kDAgBfD,IAAAA,OAAAA,QAAwB,+BAhBT,0DAAH,qDAoBhBJ,GACD,GAAE,KAGD,iBAAKM,UAAWC,EAAhB,UACGZ,IAAU,wBAAI,mBACdE,IAAW,SAACW,EAAA,EAAD,IACXb,IAAU,SAACc,EAAA,EAAD,CAAoBd,OAAQA,MAG5C,C,iEC1CD,EAA0B,wB,kBCkB1B,EAfe,WACb,OACE,gBAAKW,UAAWI,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,SAAS,KAIhB,C,+LCfDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEVC,EACM,oBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHlB,EAAS,mCAAG,yGAAOmB,EAAP,+BAAc,EAAd,SACFH,EAAAA,EAAAA,IAAA,UAChBE,EADgB,oBACeD,EADf,iBAC+BE,EAD/B,wCADE,cACjBC,EADiB,yBAKhBA,GALgB,2CAAH,qDAQTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcH,EAAd,+BAAqB,EAArB,SACLH,EAAAA,EAAAA,IAAA,UAChBE,EADgB,oBACkBD,EADlB,iBACkCE,EADlC,kBACgDG,EADhD,wCADK,cACpBF,EADoB,yBAKnBA,GALmB,2CAAH,sDAQZG,EAAkB,mCAAG,WAAMC,GAAN,uFACXR,EAAAA,EAAAA,IAAA,UAChBE,EADgB,YACWM,EADX,oBACyBP,EADzB,oBADW,cAC1BG,EAD0B,yBAKzBA,GALyB,2CAAH,sDAQlBK,EAAkB,mCAAG,WAAMD,GAAN,uFACXR,EAAAA,EAAAA,IAAA,iBACTQ,GADS,OACJN,EADI,oBAC+BD,EAD/B,oBADW,cAC1BG,EAD0B,yBAKzBA,GALyB,2CAAH,sDAQlBM,EAAkB,mCAAG,WAAOF,GAAP,4FAAWL,EAAX,+BAAkB,EAAlB,SACXH,EAAAA,EAAAA,IAAA,iBACTQ,GADS,OACJN,EADI,oBAC+BD,EAD/B,gCAC8DE,IAFnD,cAC1BC,EAD0B,yBAKzBA,GALyB,2CAAH,qD,kDCxB/B,IAlB2B,SAAC,GAA8B,IAA5B1B,EAA2B,EAA3BA,OAAQiC,EAAmB,EAAnBA,aACpC,OACE,gBAAKrB,MAAO,CAAEsB,YAAa,OAA3B,UACE,wBACGlC,EAAOmC,KAAI,YAA4C,IAAzCL,EAAwC,EAAxCA,GAAIM,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,cACjC,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaR,GAAMS,MAAO,CAAEC,KAAMP,GAA1C,UACE,wBAAKG,GAAkBC,OAFlBP,EAMZ,OAIR,C","sources":["webpack://react-homework-template/./src/components/homePages/HomePages.module.css?91de","components/homePages/HomePages.jsx","webpack://react-homework-template/./src/components/loader/Loader.module.css?198e","components/loader/Loader.jsx","components/services/APIservices.js","components/trendingMovies/TrendingMoviesList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"divHomePages\":\"HomePages_divHomePages__i2q9e\"};","import React from 'react';\nimport Notiflix from 'notiflix';\nimport Loader from 'components/loader/Loader';\nimport { getMovies } from '../services/APIservices';\nimport { useEffect, useState } from 'react';\nimport TrendingMoviesList from '../trendingMovies/TrendingMoviesList';\nimport style from './HomePages.module.css';\n\nconst HomePages = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      setLoading(true);\n      try {\n        const { data } = await getMovies();\n\n        if (data.totalHits < 1) {\n          Notiflix.Notify.failure(\n            'Sorry, nothing was found for your request. Please try again.'\n          );\n\n          setLoading(false);\n        }\n\n        setLoading(false);\n        setMovies(data.results);\n      } catch (error) {\n        Notiflix.Notify.failure('Sorry something went wrong.');\n      }\n    };\n\n    fetchItems();\n  }, []);\n\n  return (\n    <div className={style.divHomePages}>\n      {movies && <h1>Trending today</h1>}\n      {loading && <Loader />}\n      {movies && <TrendingMoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default HomePages;\n","// extracted by mini-css-extract-plugin\nexport default {\"Spinner\":\"Loader_Spinner__XW-iJ\"};","import React from 'react';\nimport styles from './Loader.module.css';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className={styles.Spinner}>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#000000\"\n        ariaLabel=\"three-dots-loading\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a268e0238f941e7dca8400715164ec05';\n\nconst END_POINTS = {\n  trending: '/trending/all/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const result = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return result;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const result = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return result;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const result = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return result;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const result = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return result;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const result = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return result;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst TrendingMoviesList = ({ movies, prevLocation }) => {\n  return (\n    <div style={{ paddingLeft: '15%' }}>\n      <ul>\n        {movies.map(({ id, original_title, original_name }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n                <h3>{original_title || original_name}</h3>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default TrendingMoviesList;\n"],"names":["useState","movies","setMovies","loading","setLoading","useEffect","fetchItems","getMovies","data","totalHits","Notiflix","results","className","style","Loader","TrendingMoviesList","styles","height","width","radius","color","ariaLabel","visible","axios","API_KEY","END_POINTS","page","result","fetchByQuery","query","fetchMoviesDetails","id","fetchMoviesCredits","fetchMoviesReviews","prevLocation","paddingLeft","map","original_title","original_name","to","state","from"],"sourceRoot":""}