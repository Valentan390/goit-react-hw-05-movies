{"version":3,"file":"static/js/318.3f30ec77.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/loader/Loader.module.css?198e","components/loader/Loader.jsx","webpack://react-homework-template/./src/components/movieDetailsPage/MovieDetailsPage.module.css?012f","components/movieDetailsPage/MovieDetailsPage.jsx","components/services/APIservices.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Spinner\":\"Loader_Spinner__XW-iJ\"};","import React from 'react';\nimport styles from './Loader.module.css';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className={styles.Spinner}>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#000000\"\n        ariaLabel=\"three-dots-loading\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"backButton\":\"MovieDetailsPage_backButton__VvaM0\",\"reviews\":\"MovieDetailsPage_reviews__o5OcX\",\"cast\":\"MovieDetailsPage_cast__0q9D9\",\"divMovieDetailsPage\":\"MovieDetailsPage_divMovieDetailsPage__zpKG+\",\"divGenres\":\"MovieDetailsPage_divGenres__ITiDt\",\"divMovie\":\"MovieDetailsPage_divMovie__ivMus\"};","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport {\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n  NavLink,\n} from 'react-router-dom';\nimport styles from './MovieDetailsPage.module.css';\nimport { fetchMoviesDetails } from '../services/APIservices';\nimport Notiflix from 'notiflix';\nimport Loader from 'components/loader/Loader';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { moviesid } = useParams();\n\n  let activeClassName = {\n    color: '#2196f3',\n  };\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const getYear = () => new Date(movie.release_date).getFullYear();\n\n  const handleClick = () => navigate(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setLoading(true);\n\n      try {\n        const { data } = await fetchMoviesDetails(moviesid);\n\n        setMovie(data);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n        Notiflix.Notify.failure('Sorry something went wrong.');\n      }\n    };\n\n    fetchMovieDetails();\n  }, [moviesid]);\n\n  return (\n    <div className={styles.divMovieDetailsPage}>\n      {loading && <Loader />}\n      <button onClick={handleClick} className={styles.backButton}>\n        Go back\n      </button>\n      {movie && (\n        <div>\n          <div className={styles.divMovie}>\n            <div>\n              <img\n                src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                alt={movie.title}\n              />\n            </div>\n            <div>\n              <h3>\n                {movie.title}({getYear()})\n              </h3>\n\n              <p>User Score: {movie.vote_average.toFixed(1)}</p>\n\n              <h3>Genres:</h3>\n              <div className={styles.divGenres}>\n                {movie.genres.map(moviegenre => {\n                  return <p>{moviegenre.name}</p>;\n                })}\n              </div>\n\n              <h3>Overview:</h3>\n\n              <p>{movie.overview}</p>\n              <hr />\n\n              <>\n                <h2>Additional Information</h2>\n                <NavLink\n                  to={`/movies/${moviesid}/reviews`}\n                  style={({ isActive }) =>\n                    isActive ? activeClassName : undefined\n                  }\n                  state={location.state}\n                  className={styles.reviews}\n                >\n                  Reviews\n                </NavLink>\n\n                <NavLink\n                  to={`/movies/${moviesid}/cast`}\n                  style={({ isActive }) =>\n                    isActive ? activeClassName : undefined\n                  }\n                  state={location.state}\n                  className={styles.cast}\n                >\n                  Cast\n                </NavLink>\n                <hr />\n              </>\n            </div>\n          </div>\n        </div>\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a268e0238f941e7dca8400715164ec05';\n\nconst END_POINTS = {\n  trending: '/trending/all/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const result = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return result;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const result = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return result;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const result = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return result;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const result = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return result;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const result = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return result;\n};\n"],"names":["className","styles","height","width","radius","color","ariaLabel","visible","useState","movie","setMovie","loading","setLoading","moviesid","useParams","activeClassName","location","useLocation","navigate","useNavigate","useEffect","fetchMovieDetails","fetchMoviesDetails","data","Notiflix","Loader","onClick","state","from","src","poster_path","alt","title","Date","release_date","getFullYear","vote_average","toFixed","genres","map","moviegenre","name","overview","to","style","isActive","undefined","axios","API_KEY","END_POINTS","getMovies","page","result","fetchByQuery","query","id","fetchMoviesCredits","fetchMoviesReviews"],"sourceRoot":""}